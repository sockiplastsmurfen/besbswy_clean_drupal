<?php
/**
 * @file
 * Cleans nodes from BESbswy text before inserting into database.
 *
 * This module solves the problem when using Typekit in CKEditor by removing
 * the BESbswy span's added by Typekit.
 */

/**
 * Implements hook_entity_presave().
 */
function besbswy_clean_entity_presave($node) {
  $n = json_encode($node);
  var_dump($n);
  $n = preg_replace('!<p><span(.*?)BESbswy[^<]*?<\\\\/span><\\\\/p>!', '', $n);
  $n = preg_replace('!<span(.*?)BESbswy[^<]*?<\\\\/span>!', '', $n);
  $n = json_decode($n, TRUE);

  // Needs to be parsed since json_decode return arrays of arrays.
  $n = (object) $n;

  if (isset($n->original)) {
    $n->original = (object) $n->original;
  }

  foreach ($node as $key => $value) {
    $node->{$key} = $n->{$key};
  }
}

/**
 * Implements hook_form_alter().
 */
function besbswy_clean_form_alter(&$form, &$form_state, $form_id) {
  // Add extra validation for block add and edit.
  if ($form_id == 'block_admin_configure' || $form_id == 'block_add_block_form') {
    $form['#validate'][] = '_besbswy_clean_block_validate';
  }
}

/**
 * Removes BESbswy span's from block body.
 */
function _besbswy_clean_block_validate($form, &$form_state) {
  if (isset($form_state['values']['body']['value'])) {
    $body = $form_state['values']['body']['value'];
    $body = preg_replace('!<span(.*?)BESbswy[^<]*?<\\\\/span>!', '', $body);
    $form_state['values']['body']['value'] = $body;
  }
}
